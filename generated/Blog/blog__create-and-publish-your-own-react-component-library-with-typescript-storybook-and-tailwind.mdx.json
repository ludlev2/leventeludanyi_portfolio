{
  "title": "Create and publish your own React component library with Storybook, TypeScript, and Tailwind",
  "date": "2022-09-18T00:00:00.000Z",
  "tags": [
    "ReactJS",
    "Library",
    "Design Systems",
    "TypeScript",
    "Tailwind",
    "NPM",
    "Storybook"
  ],
  "draft": false,
  "summary": "A guide on how to create your own custom React component library with Storybook, TypeScript, and Tailwind, and publish them to npm.",
  "author": "Dale Larroder",
  "body": {
    "raw": "\n# Overview\n\n<TOCInline toc={props.toc} exclude=\"Overview\" toHeading={2} />\n\n# What is a component library?\n\nA [component library](https://langvad.dev/blog/what-is-a-component-library/) is basically a set of re-usable components. It could be a folder inside your project with\ncommon components used throughout the application. It could be a distributed package on npm. It could also be a part of a bigger design system. A component\nlibrary can be small and it can be large. There are no official rules for what a component library means.\n\nSome examples of a component library are: Google's [MUI](https://mui.com/), Alibaba's [Ant Design](https://ant.design/) and IBM's design system [Carbon](https://carbondesignsystem.com/).\n\n# Introduction\n\nI have spent the weekend trying out different guides and tutorials, trying to setup [Storybook](https://storybook.js.org/), [Rollup](https://rollupjs.org/guide/en/), [Yarn](https://yarnpkg.com/), and\n[Jest](https://jestjs.io/) to play nicely together but it was a pain, not to mention I really wanted to make [Vite](https://vitejs.dev/) work with this but to no avail.\n\nBut behold, I found a package called [TSDX](https://tsdx.io/), it is a zero-config CLI that helps you develop, test, and publish modern TypeScript packages.\n\nIn this guide, I'll be creating my component library `playground`, this is where (I'm hoping) I can show off some of the cool component ideas I have to the world and\npublish it to [NPM](https://www.npmjs.com/) (because I'm cool).\n\n# Getting Started\n\n## Step 1: Initialize project using tsdx\n\n```bash\nnpx tsdx create playground\n```\n\nThis will promp you to choose from 3 different options, `basic`, `react`, and `react-with-storybook`.\n\nPlease choose `react-with-storybook`\n\n![create-playground](/static/blog/create-playground.webp)\n\n## Step 2: Adding Tailwind\n\nWe will need to install `tailwindcss`, `postcss` and `autoprefixer`\n\n```bash\nyarn add -D tailwindcss@latest postcss@latest autoprefixer@latest\n```\n\nAfter installing the tailwindcss dependencies, we need to create a `tailwind.config.js` file, to do this just run:\n\n```bash\nnpx tailwindcss init\n```\n\nAfter generating your `tailwind.config.js` file, you can add the following lines to run\n[Just in Time](https://v2.tailwindcss.com/docs/just-in-time-mode) Mode and specify a purge path to purge any unused CSS\n\n```js:tailwind.config.js\nmodule.exports = {\n  mode: 'jit',\n  purge: ['./src/**/*.{js,jsx,ts,tsx}', './stories/*'],\n  ...rest of config\n}\n```\n\nNext is to create a `tailwind.css` file at the root of your project, you can name it anything you like by the way,\nI just want to name it tailwind.css because thats the only styles I'll be needing.\n\n```css:tailwind.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\nAfter creating your `tailwind.css` file, we need to integrate it with storybook, for this step, we will need to add another\ndev dependency `@storybook/addon-postcss`\n\n```bash\nyarn add -D @storybook/addon-postcss\n```\n\nAfter installing `@storybook/addon-postcss`, we need to add it to `./storybook/main.js`\n\n```js:./storybook/main.js\nmodule.exports = {\n  stories: ['../stories/**/*.stories.@(ts|tsx|js|jsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    {\n      name: '@storybook/addon-postcss',\n      options: {\n        postcssLoaderOptions: {\n          implementation: require('postcss'),\n        },\n      },\n    },\n  ],\n  ...rest of config\n};\n```\n\nAnd finally, to be able to see our tailwind styles in storybook, we will need to import our `tailwind.css` file in `.storybook/preview.js`\n\n```js:.storybook/preview.js\nimport '../tailwind.css';\n```\n\nWe can now test if your tailwind styles are working, lets run storybook\n\n```bash\nyarn storybook\n```\n\nYou can add the following styles in your `src/index.tsx`\n\n```tsx:src/index.tsx\nexport const Thing: FC<Props> = ({ children }) => {\n  return (\n    <div className=\"text-xl text-pink-500 p-4 bg-gray-200 rounded-lg\">\n      {children || `the snozzberries taste like snozzberries`}\n    </div>\n  );\n};\n```\n\nand you should see our tailwind styles working\n\n![tailwind-working](/static/blog/tailwind-working.webp)\n\n## Step 3: Setup our build configuration\n\nBecause we added Tailwind to our library, we need to include exporting it's styles in\nour build config.\n\nLuckily, Tailwind has great documentation, and we can just use it's default configuration from the\n[optimizing for production](https://tailwindcss.com/docs/optimizing-for-production) guide docs\n\nIn our `package.json` file, we just need to add the following\n\n```json:package.json\n\"scripts\": {\n  ... rest of\n\"build-tailwind\": \"npx tailwindcss -o ./dist/styles.css --minify\"\n}\n```\n\nAnd we also need to change our build script to consume our new `build-tailwind` script\n\n```json:package.json\n\"scripts\": {\n  ... rest of\n  \"build\": \"tsdx build && yarn build-tailwind\",\n}\n```\n\nTo check if your build worked, you can run `yarn build` and check if your build has\ngenerated a `styles.css` file in your `dist` folder\n\n```diff:dist/\ndist/\nindex.d.ts\nindex.js\n... rest of config\n+styles.css\n```\n\nThe `styles.css` is important because this is what our package consumers will use for our\nstyles to take effect in their projects.\n\n## Step 4: Publishing to NPM\n\nFirst step is to push our code to a Github repo, so just create a new repository\nand push your code to Github,\n\n```bash\ngit init\ngit remote add origin <repo origin url>\ngit add .\ngit commit -m â€œinitial setup\ngit push origin master\n```\n\nNext step is to login to your NPM account via terminal\n\n```bash\nnpm login\n```\n\nThis will prompt you to enter your NPM username, password, and email address.\n\nIf you don't have an NPM account yet, you can create an account [here](https://www.npmjs.com/signup)\n\nAfter logging in, we are ready to publish our package, but first, we need to change our\npackage name to whatever we want, in our case it is called `@dlarroder/playground`\n\n```json:package.json\n\"name\": \"@dlarroder/playground\",\n\"author\": \"Dale Larroder\",\n\"version\": \"0.0.1\",\n```\n\nAfter changing our package.json file, we can now run our build so it will pick up our new package name.\n\n```bash\nyarn build\n```\n\nAfter building, we will have our updated `/dist` folder with our new name, we can now run our\nfinal command `npm publish --access public`\n\n```bash\nnpm publish --access public\n```\n\nBoom, you are done! you can now check our NPM account for our new package [@dlarroder/playground](https://www.npmjs.com/package/@dlarroder/playground).\n\n# Conclusion\n\nBuilding and publishing your own package might sound hard at first, but it is really simple when you've tried it,\nyou just need to follow some random guide in the internet like this one, (joke) but CLI tools like [tsdx](https://tsdx.io/) really\nmakes it simple to bootstrap your very own component library. I really had fun creating my playground package and this\nguide, hope this helps!\n\n<LinkButton>Fancy Button!</LinkButton>\n\nFun fact! ^This `<LinkButton />` component is from my playground!\n\nYou can check out more components on [playground.dalelarroder.com](https://playground.dalelarroder.com/).\n",
    "code": "var Component=(()=>{var h=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var k=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var s in e)l(a,s,{get:e[s],enumerable:!0})},t=(a,e,s,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!g.call(a,i)&&i!==s&&l(a,i,{get:()=>e[i],enumerable:!(c=m(e,i))||c.enumerable});return a};var b=(a,e,s)=>(s=a!=null?h(N(a)):{},t(e||!a||!a.__esModule?l(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>t(l({},\"__esModule\",{value:!0}),a);var r=k((T,o)=>{o.exports=_jsx_runtime});var v={};y(v,{default:()=>j,frontmatter:()=>w});var n=b(r()),w={title:\"Create and publish your own React component library with Storybook, TypeScript, and Tailwind\",date:\"2022-09-18\",tags:[\"ReactJS\",\"Library\",\"Design Systems\",\"TypeScript\",\"Tailwind\",\"NPM\",\"Storybook\"],draft:!1,author:\"Dale Larroder\",summary:\"A guide on how to create your own custom React component library with Storybook, TypeScript, and Tailwind, and publish them to npm.\"};function d(a){let e=Object.assign({h1:\"h1\",a:\"a\",span:\"span\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\",img:\"img\",div:\"div\"},a.components),{TOCInline:s,LinkButton:c}=e;return c||p(\"LinkButton\",!0,\"230:1-230:39\"),s||p(\"TOCInline\",!0,\"12:1-12:63\"),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:\"overview\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#overview\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Overview\"]}),`\n`,(0,n.jsx)(s,{toc:a.toc,exclude:\"Overview\",toHeading:2}),`\n`,(0,n.jsxs)(e.h1,{id:\"what-is-a-component-library\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#what-is-a-component-library\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"What is a component library?\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"A \",(0,n.jsx)(e.a,{href:\"https://langvad.dev/blog/what-is-a-component-library/\",children:\"component library\"}),` is basically a set of re-usable components. It could be a folder inside your project with\ncommon components used throughout the application. It could be a distributed package on npm. It could also be a part of a bigger design system. A component\nlibrary can be small and it can be large. There are no official rules for what a component library means.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Some examples of a component library are: Google's \",(0,n.jsx)(e.a,{href:\"https://mui.com/\",children:\"MUI\"}),\", Alibaba's \",(0,n.jsx)(e.a,{href:\"https://ant.design/\",children:\"Ant Design\"}),\" and IBM's design system \",(0,n.jsx)(e.a,{href:\"https://carbondesignsystem.com/\",children:\"Carbon\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h1,{id:\"introduction\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#introduction\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Introduction\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I have spent the weekend trying out different guides and tutorials, trying to setup \",(0,n.jsx)(e.a,{href:\"https://storybook.js.org/\",children:\"Storybook\"}),\", \",(0,n.jsx)(e.a,{href:\"https://rollupjs.org/guide/en/\",children:\"Rollup\"}),\", \",(0,n.jsx)(e.a,{href:\"https://yarnpkg.com/\",children:\"Yarn\"}),`, and\n`,(0,n.jsx)(e.a,{href:\"https://jestjs.io/\",children:\"Jest\"}),\" to play nicely together but it was a pain, not to mention I really wanted to make \",(0,n.jsx)(e.a,{href:\"https://vitejs.dev/\",children:\"Vite\"}),\" work with this but to no avail.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"But behold, I found a package called \",(0,n.jsx)(e.a,{href:\"https://tsdx.io/\",children:\"TSDX\"}),\", it is a zero-config CLI that helps you develop, test, and publish modern TypeScript packages.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this guide, I'll be creating my component library \",(0,n.jsx)(e.code,{children:\"playground\"}),`, this is where (I'm hoping) I can show off some of the cool component ideas I have to the world and\npublish it to `,(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/\",children:\"NPM\"}),\" (because I'm cool).\"]}),`\n`,(0,n.jsxs)(e.h1,{id:\"getting-started\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#getting-started\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Getting Started\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"step-1-initialize-project-using-tsdx\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#step-1-initialize-project-using-tsdx\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Step 1: Initialize project using tsdx\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`npx tsdx create playground\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This will promp you to choose from 3 different options, \",(0,n.jsx)(e.code,{children:\"basic\"}),\", \",(0,n.jsx)(e.code,{children:\"react\"}),\", and \",(0,n.jsx)(e.code,{children:\"react-with-storybook\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Please choose \",(0,n.jsx)(e.code,{children:\"react-with-storybook\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/static/blog/create-playground.webp\",alt:\"create-playground\"})}),`\n`,(0,n.jsxs)(e.h2,{id:\"step-2-adding-tailwind\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#step-2-adding-tailwind\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Step 2: Adding Tailwind\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We will need to install \",(0,n.jsx)(e.code,{children:\"tailwindcss\"}),\", \",(0,n.jsx)(e.code,{children:\"postcss\"}),\" and \",(0,n.jsx)(e.code,{children:\"autoprefixer\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` -D tailwindcss@latest postcss@latest autoprefixer@latest\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After installing the tailwindcss dependencies, we need to create a \",(0,n.jsx)(e.code,{children:\"tailwind.config.js\"}),\" file, to do this just run:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`npx tailwindcss init\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After generating your \",(0,n.jsx)(e.code,{children:\"tailwind.config.js\"}),` file, you can add the following lines to run\n`,(0,n.jsx)(e.a,{href:\"https://v2.tailwindcss.com/docs/just-in-time-mode\",children:\"Just in Time\"}),\" Mode and specify a purge path to purge any unused CSS\"]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"tailwind.config.js\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"module\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"exports\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"mode\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'jit'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"purge\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'./src/**/*.{js,jsx,ts,tsx}'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'./stories/*'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"rest \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"of\"}),` config\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Next is to create a \",(0,n.jsx)(e.code,{children:\"tailwind.css\"}),` file at the root of your project, you can name it anything you like by the way,\nI just want to name it tailwind.css because thats the only styles I'll be needing.`]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"tailwind.css\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-css\",children:(0,n.jsxs)(e.code,{className:\"language-css code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token atrule\",children:[(0,n.jsx)(e.span,{className:\"token rule\",children:\"@tailwind\"}),\" base\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token atrule\",children:[(0,n.jsx)(e.span,{className:\"token rule\",children:\"@tailwind\"}),\" components\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token atrule\",children:[(0,n.jsx)(e.span,{className:\"token rule\",children:\"@tailwind\"}),\" utilities\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"})]}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After creating your \",(0,n.jsx)(e.code,{children:\"tailwind.css\"}),` file, we need to integrate it with storybook, for this step, we will need to add another\ndev dependency `,(0,n.jsx)(e.code,{children:\"@storybook/addon-postcss\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` -D @storybook/addon-postcss\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After installing \",(0,n.jsx)(e.code,{children:\"@storybook/addon-postcss\"}),\", we need to add it to \",(0,n.jsx)(e.code,{children:\"./storybook/main.js\"})]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"./storybook/main.js\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"module\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"exports\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"stories\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'../stories/**/*.stories.@(ts|tsx|js|jsx)'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"addons\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'@storybook/addon-links'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'@storybook/addon-essentials'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'@storybook/addon-postcss'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"options\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"postcssLoaderOptions\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"implementation\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"require\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'postcss'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"rest \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"of\"}),` config\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"And finally, to be able to see our tailwind styles in storybook, we will need to import our \",(0,n.jsx)(e.code,{children:\"tailwind.css\"}),\" file in \",(0,n.jsx)(e.code,{children:\".storybook/preview.js\"})]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\".storybook/preview.js\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsx)(e.code,{className:\"language-js code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'../tailwind.css'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})})}),`\n`,(0,n.jsx)(e.p,{children:\"We can now test if your tailwind styles are working, lets run storybook\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` storybook\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can add the following styles in your \",(0,n.jsx)(e.code,{children:\"src/index.tsx\"})]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"src/index.tsx\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-tsx\",children:(0,n.jsxs)(e.code,{className:\"language-tsx code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Thing\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"FC\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Props\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" children \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"div\"]}),\" \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"className\"}),(0,n.jsxs)(e.span,{className:\"token attr-value\",children:[(0,n.jsx)(e.span,{className:\"token punctuation attr-equals\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:'\"'}),\"text-xl text-pink-500 p-4 bg-gray-200 rounded-lg\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:'\"'})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"      \"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"children \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"||\"}),\" \",(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"the snozzberries taste like snozzberries\"}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"    \"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"div\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"and you should see our tailwind styles working\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/static/blog/tailwind-working.webp\",alt:\"tailwind-working\"})}),`\n`,(0,n.jsxs)(e.h2,{id:\"step-3-setup-our-build-configuration\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#step-3-setup-our-build-configuration\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Step 3: Setup our build configuration\"]}),`\n`,(0,n.jsx)(e.p,{children:`Because we added Tailwind to our library, we need to include exporting it's styles in\nour build config.`}),`\n`,(0,n.jsxs)(e.p,{children:[`Luckily, Tailwind has great documentation, and we can just use it's default configuration from the\n`,(0,n.jsx)(e.a,{href:\"https://tailwindcss.com/docs/optimizing-for-production\",children:\"optimizing for production\"}),\" guide docs\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"In our \",(0,n.jsx)(e.code,{children:\"package.json\"}),\" file, we just need to add the following\"]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"package.json\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-json\",children:(0,n.jsxs)(e.code,{className:\"language-json code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"scripts\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`  ... rest of\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"build-tailwind\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"npx tailwindcss -o ./dist/styles.css --minify\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"And we also need to change our build script to consume our new \",(0,n.jsx)(e.code,{children:\"build-tailwind\"}),\" script\"]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"package.json\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-json\",children:(0,n.jsxs)(e.code,{className:\"language-json code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"scripts\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`  ... rest of\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token property\",children:'\"build\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"tsdx build && yarn build-tailwind\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To check if your build worked, you can run \",(0,n.jsx)(e.code,{children:\"yarn build\"}),` and check if your build has\ngenerated a `,(0,n.jsx)(e.code,{children:\"styles.css\"}),\" file in your \",(0,n.jsx)(e.code,{children:\"dist\"}),\" folder\"]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"dist/\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`dist/\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`index.d.ts\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`index.js\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`... rest of config\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`styles.css\n`})]})})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"styles.css\"}),` is important because this is what our package consumers will use for our\nstyles to take effect in their projects.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"step-4-publishing-to-npm\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#step-4-publishing-to-npm\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Step 4: Publishing to NPM\"]}),`\n`,(0,n.jsx)(e.p,{children:`First step is to push our code to a Github repo, so just create a new repository\nand push your code to Github,`}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"git\"}),` init\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"git\"}),\" remote \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),\" origin \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"repo origin url\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"git\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin class-name\",children:\".\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"git\"}),` commit -m \\u201Cinitial setup\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"git\"}),` push origin master\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Next step is to login to your NPM account via terminal\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"npm\"}),` login\n`]})})}),`\n`,(0,n.jsx)(e.p,{children:\"This will prompt you to enter your NPM username, password, and email address.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you don't have an NPM account yet, you can create an account \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/signup\",children:\"here\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[`After logging in, we are ready to publish our package, but first, we need to change our\npackage name to whatever we want, in our case it is called `,(0,n.jsx)(e.code,{children:\"@dlarroder/playground\"})]}),`\n`,(0,n.jsx)(e.div,{className:\"remark-code-title\",children:\"package.json\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-json\",children:(0,n.jsxs)(e.code,{className:\"language-json code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"name\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"@dlarroder/playground\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"author\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"Dale Larroder\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token property\",children:'\"version\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"0.0.1\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"After changing our package.json file, we can now run our build so it will pick up our new package name.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` build\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After building, we will have our updated \",(0,n.jsx)(e.code,{children:\"/dist\"}),` folder with our new name, we can now run our\nfinal command `,(0,n.jsx)(e.code,{children:\"npm publish --access public\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"npm\"}),` publish --access public\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Boom, you are done! you can now check our NPM account for our new package \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/@dlarroder/playground\",children:\"@dlarroder/playground\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h1,{id:\"conclusion\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#conclusion\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`Building and publishing your own package might sound hard at first, but it is really simple when you've tried it,\nyou just need to follow some random guide in the internet like this one, (joke) but CLI tools like `,(0,n.jsx)(e.a,{href:\"https://tsdx.io/\",children:\"tsdx\"}),` really\nmakes it simple to bootstrap your very own component library. I really had fun creating my playground package and this\nguide, hope this helps!`]}),`\n`,(0,n.jsx)(c,{children:\"Fancy Button!\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Fun fact! ^This \",(0,n.jsx)(e.code,{children:\"<LinkButton />\"}),\" component is from my playground!\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can check out more components on \",(0,n.jsx)(e.a,{href:\"https://playground.dalelarroder.com/\",children:\"playground.dalelarroder.com\"}),\".\"]})]})}function x(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var j=x;function p(a,e,s){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(s?\"\\nIt\\u2019s referenced in your code at `\"+s+\"` in `/Users/ludanyilevente/dalelarroder/_mdx_bundler_entry_point-5c75e034-aa20-4b77-aa90-2130d95ca878.mdx`\":\"\"))}return f(v);})();\n;return Component;"
  },
  "_id": "blog/create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind.mdx",
  "_raw": {
    "sourceFilePath": "blog/create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind.mdx",
    "sourceFileName": "create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind"
  },
  "type": "Blog",
  "readingTime": {
    "text": "5 min read",
    "minutes": 4.865,
    "time": 291900,
    "words": 973
  },
  "slug": "create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind",
  "toc": [
    {
      "value": "Overview",
      "url": "#overview",
      "depth": 1
    },
    {
      "value": "What is a component library?",
      "url": "#what-is-a-component-library",
      "depth": 1
    },
    {
      "value": "Introduction",
      "url": "#introduction",
      "depth": 1
    },
    {
      "value": "Getting Started",
      "url": "#getting-started",
      "depth": 1
    },
    {
      "value": "Step 1: Initialize project using tsdx",
      "url": "#step-1-initialize-project-using-tsdx",
      "depth": 2
    },
    {
      "value": "Step 2: Adding Tailwind",
      "url": "#step-2-adding-tailwind",
      "depth": 2
    },
    {
      "value": "Step 3: Setup our build configuration",
      "url": "#step-3-setup-our-build-configuration",
      "depth": 2
    },
    {
      "value": "Step 4: Publishing to NPM",
      "url": "#step-4-publishing-to-npm",
      "depth": 2
    },
    {
      "value": "Conclusion",
      "url": "#conclusion",
      "depth": 1
    }
  ]
}