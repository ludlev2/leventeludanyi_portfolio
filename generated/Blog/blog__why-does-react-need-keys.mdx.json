{
  "title": "Why does React need keys?",
  "date": "2022-07-31T00:00:00.000Z",
  "tags": [
    "ReactJs",
    "Snippets"
  ],
  "draft": false,
  "summary": "This article will show you what is the purpose if the “key” prop in React and some best practices around it.",
  "author": "Dale Larroder",
  "body": {
    "raw": "\n## Overview\n\n<TOCInline toc={props.toc} exclude=\"Overview\" toHeading={2} />\n\n# Why does React need keys?\n\nThe `key` prop is the only thing React can use to identify components in the DOM when they are\nmapped from an array. If no key is provided then you will see an error like this:\n\n```console\nMissing “key” prop for element in iterator\n```\n\nIn that case, React will default to use the index of the element in the array as the key.\nUsually, developers will also provide index as the key just to remove the warning.\n\n# Using the index as a key is dangerous\n\n#### Please do NOT do this:\n\n```js\ntodos.map((todo, index) => (\n    <Todo {...todo} key={index} />\n  ));\n}\n```\n\nIt is stated in the official React [docs](https://reactjs.org/docs/lists-and-keys.html) that this is not recommended.\n\n> We don’t recommend using indexes for keys if the order of items may change.\n> This can negatively impact performance and may cause issues with component state.\n\nRobin Pokorny has an amazing [article](https://robinpokorny.medium.com/index-as-a-key-is-an-anti-pattern-e0349aece318) explaining in detail the negative impacts of using an index as a key.\n\n# Rules of keys\n\n- Keys must be `unique` among siblings. However, it’s okay to use the same keys for JSX nodes\n  in different arrays.\n\n- Keys must `not change` or that defeats their purpose! Don’t generate them while rendering.\n\n# Where to get your key\n\n- **Data from a database:** If your data is coming from a database, you can use the database keys/IDs,\n  which are unique by nature.\n\n- **Locally generated data:** If your data is generated and persisted locally (e.g. notes in a note-taking app),\n  use an incrementing counter, `crypto.randomUUID()` or a package like `uuid` when creating items.\n\n```js\n// id must be from db, which are unique by nature.\nconst todos = [\n  {\n    id: 22,\n    name: 'eat breakfast',\n  },\n  // ....\n]\n\n// Much better\ntodos.map((todo) => <Todo {...todo} key={todo.id} />)\n```\n\n# Conclusion\n\n- Always try to use stable **unique** IDs as the key.\n- If the list is **never** reordered or filtered, you can use their index as keys. (As a last resort)\n- If you're a visual learner, Dan Abramov has a short visual [explanation](https://twitter.com/dan_abramov/status/1415279090446204929?lang=en) on why React needs keys, check it out!\n",
    "code": "var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var N=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var s in e)c(a,s,{get:e[s],enumerable:!0})},o=(a,e,s,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of m(e))!k.call(a,t)&&t!==s&&c(a,t,{get:()=>e[t],enumerable:!(i=p(e,t))||i.enumerable});return a};var g=(a,e,s)=>(s=a!=null?h(u(a)):{},o(e||!a||!a.__esModule?c(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>o(c({},\"__esModule\",{value:!0}),a);var l=N((_,r)=>{r.exports=_jsx_runtime});var I={};y(I,{default:()=>w,frontmatter:()=>b});var n=g(l()),b={title:\"Why does React need keys?\",date:\"2022-07-31\",tags:[\"ReactJs\",\"Snippets\"],draft:!1,author:\"Dale Larroder\",summary:\"This article will show you what is the purpose if the \\u201Ckey\\u201D prop in React and some best practices around it.\"};function d(a){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",h1:\"h1\",p:\"p\",code:\"code\",pre:\"pre\",h4:\"h4\",blockquote:\"blockquote\",ul:\"ul\",li:\"li\",strong:\"strong\"},a.components),{TOCInline:s}=e;return s||v(\"TOCInline\",!0,\"12:1-12:63\"),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h2,{id:\"overview\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#overview\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Overview\"]}),`\n`,(0,n.jsx)(s,{toc:a.toc,exclude:\"Overview\",toHeading:2}),`\n`,(0,n.jsxs)(e.h1,{id:\"why-does-react-need-keys\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#why-does-react-need-keys\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Why does React need keys?\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"key\"}),` prop is the only thing React can use to identify components in the DOM when they are\nmapped from an array. If no key is provided then you will see an error like this:`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-console code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`Missing \\u201Ckey\\u201D prop for element in iterator\n`})})}),`\n`,(0,n.jsx)(e.p,{children:`In that case, React will default to use the index of the element in the array as the key.\nUsually, developers will also provide index as the key just to remove the warning.`}),`\n`,(0,n.jsxs)(e.h1,{id:\"using-the-index-as-a-key-is-dangerous\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#using-the-index-as-a-key-is-dangerous\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Using the index as a key is dangerous\"]}),`\n`,(0,n.jsxs)(e.h4,{id:\"please-do-not-do-this\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#please-do-not-do-this\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Please do NOT do this:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"todos\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token method function property-access\",children:\"map\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token parameter\",children:[\"todo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" index\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Todo\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"todo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"index\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"/\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"It is stated in the official React \",(0,n.jsx)(e.a,{href:\"https://reactjs.org/docs/lists-and-keys.html\",children:\"docs\"}),\" that this is not recommended.\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:`We don\\u2019t recommend using indexes for keys if the order of items may change.\nThis can negatively impact performance and may cause issues with component state.`}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Robin Pokorny has an amazing \",(0,n.jsx)(e.a,{href:\"https://robinpokorny.medium.com/index-as-a-key-is-an-anti-pattern-e0349aece318\",children:\"article\"}),\" explaining in detail the negative impacts of using an index as a key.\"]}),`\n`,(0,n.jsxs)(e.h1,{id:\"rules-of-keys\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#rules-of-keys\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Rules of keys\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Keys must be \",(0,n.jsx)(e.code,{children:\"unique\"}),` among siblings. However, it\\u2019s okay to use the same keys for JSX nodes\nin different arrays.`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Keys must \",(0,n.jsx)(e.code,{children:\"not change\"}),\" or that defeats their purpose! Don\\u2019t generate them while rendering.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.h1,{id:\"where-to-get-your-key\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#where-to-get-your-key\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Where to get your key\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Data from a database:\"}),` If your data is coming from a database, you can use the database keys/IDs,\nwhich are unique by nature.`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Locally generated data:\"}),` If your data is generated and persisted locally (e.g. notes in a note-taking app),\nuse an incrementing counter, `,(0,n.jsx)(e.code,{children:\"crypto.randomUUID()\"}),\" or a package like \",(0,n.jsx)(e.code,{children:\"uuid\"}),\" when creating items.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// id must be from db, which are unique by nature.\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" todos \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"22\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'eat breakfast'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"// ....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// Much better\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"todos\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token method function property-access\",children:\"map\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token parameter\",children:\"todo\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Todo\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"todo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"todo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"/\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.h1,{id:\"conclusion\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#conclusion\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Always try to use stable \",(0,n.jsx)(e.strong,{children:\"unique\"}),\" IDs as the key.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If the list is \",(0,n.jsx)(e.strong,{children:\"never\"}),\" reordered or filtered, you can use their index as keys. (As a last resort)\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If you're a visual learner, Dan Abramov has a short visual \",(0,n.jsx)(e.a,{href:\"https://twitter.com/dan_abramov/status/1415279090446204929?lang=en\",children:\"explanation\"}),\" on why React needs keys, check it out!\"]}),`\n`]})]})}function x(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var w=x;function v(a,e,s){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(s?\"\\nIt\\u2019s referenced in your code at `\"+s+\"` in `/Users/ludanyilevente/dalelarroder/_mdx_bundler_entry_point-c22b37a1-3295-4de7-9848-dd7d5e8a0573.mdx`\":\"\"))}return f(I);})();\n;return Component;"
  },
  "_id": "blog/why-does-react-need-keys.mdx",
  "_raw": {
    "sourceFilePath": "blog/why-does-react-need-keys.mdx",
    "sourceFileName": "why-does-react-need-keys.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/why-does-react-need-keys"
  },
  "type": "Blog",
  "readingTime": {
    "text": "2 min read",
    "minutes": 1.845,
    "time": 110700,
    "words": 369
  },
  "slug": "why-does-react-need-keys",
  "toc": [
    {
      "value": "Overview",
      "url": "#overview",
      "depth": 2
    },
    {
      "value": "Why does React need keys?",
      "url": "#why-does-react-need-keys",
      "depth": 1
    },
    {
      "value": "Using the index as a key is dangerous",
      "url": "#using-the-index-as-a-key-is-dangerous",
      "depth": 1
    },
    {
      "value": "Please do NOT do this:",
      "url": "#please-do-not-do-this",
      "depth": 4
    },
    {
      "value": "Rules of keys",
      "url": "#rules-of-keys",
      "depth": 1
    },
    {
      "value": "Where to get your key",
      "url": "#where-to-get-your-key",
      "depth": 1
    },
    {
      "value": "Conclusion",
      "url": "#conclusion",
      "depth": 1
    }
  ]
}